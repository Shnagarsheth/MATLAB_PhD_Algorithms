%% --------Heat Exchanger Estimation-----------%%
% Created by: Shaival Nagarsheth
% Details - 1. SDEs, unpertubed ODEs, EKF, Second-order filtering equaitons
%           2. Multiple changes in the input varaibles with noise intensity variations as well. 
%           3. The observation equation values comes from the CFD data generated by Ansys- Gambit and  Fluent Software
% Practical Setup - Tube-in-tube Heat exchanger with 1 meter length and 1 inch diameter
% Version & Date: 14-07-2020 (updated)
%%---------------------------------------------------------------%%

%% ------------Decalartion------------------

clear all;  % Deleting all variables
clc;        %Clearing the screen
N=1000;     %Number of Samples
T=100;      %Time period of simulation
dt=T/N;     %differential interval

%% ---- Noise Intensity------
alpha1=0.00015;
alpha2=0.0001;
alpha3=0.0001;
alpha4=0.0001;

%% -----Heat Exchanger Inputs/Outputs -------
fc=0.00277; % Input Flowrate of Cold Stream
fh=0.00917; % Input Flowrate of Hot Stream
Tcin=298;   % Input Temperature of Cold Stream
Thin=353;   % Input Temperature of Hot Stream
h=280;      % Heat transfer co-efficient

Ac=0.04;    % Cross-Sectional area of Cold region
Ah=0.079;   % Cross-Sectional area of Hot region
mc=0.04;    % Mass of Cold stream
mh=0.079;   % Mass of Hot stream
Cpc=4186;   % Heat transfer co-efficient
Cph=4193;   % Heat transfer co-efficient
r=20;

%% ------------Initialization------------------
x1(1)=298;  % Operting value of Cold Stream in Kevlin
x2(1)=353;  % Operting value of Hot Stream in Kevlin

Fmx1(1)=298;
Fmx2(1)=353;

Smx1(1)=298;
Smx2(1)=353;

% Initial Variance
FP11(1)=1;  
FP12(1)=0;
FP21(1)=0;
FP22(1)=1;

SP11(1)=1;
SP12(1)=0;
SP21(1)=0;
SP22(1)=1;

%% --------------- First-loop of 1000 samples-----------
for k=1:N
   dW1=randn*sqrt(dt);
   dW2=randn*sqrt(dt);
   dW3=randn*sqrt(dt);
   dW4=randn*sqrt(dt);
   dV1=randn*sqrt(dt);
   dV2=randn*sqrt(dt);
   
   %% Stochastic Differential Equations -- Heat Exchanger 
   x1(k+1)=x1(k)+((((fc/mc)*(Tcin-x1(k)))+(((h*Ac)/(mc*Cpc))*(x2(k)-x1(k))))*dt)+((alpha1*((Tcin-x1(k))/mc))*dW1)+(alpha2*(fc/mc)*dW2);
   x2(k+1)=x2(k)+((((fh/mh)*(Thin-x2(k)))-(((h*Ah)/(mh*Cph))*(x2(k)-x1(k))))*dt)+((alpha3*((Thin-x2(k))/mh))*dW3)+(alpha4*(fh/mh)*dW4);
   
   %% EKF mean
   Fmx1(k+1)=Fmx1(k)+((((fc/mc)*Tcin-(fc/mc)*Fmx1(k))+(((h*Ac)/(mc*Cpc))*(Fmx2(k)-Fmx1(k))))*dt)+((FP11(k)*(r^-2)*(((x1(k)*dt)+(r*dV1))-(Fmx1(k)*dt))))+((FP12(k)*(r^-2)*(((x2(k)*dt)+(r*dV2))-(Fmx2(k)*dt))));
   Fmx2(k+1)=Fmx2(k)+((((fh/mh)*Thin-(fh/mh)*Fmx2(k))-(((h*Ah)/(mh*Cph))*(Fmx2(k)-Fmx1(k))))*dt)+((FP12(k)*(r^-2)*(((x1(k)*dt)+(r*dV1))-(Fmx1(k)*dt))))+((FP22(k)*(r^-2)*(((x2(k)*dt)+(r*dV2))-(Fmx2(k)*dt))));

   %% EKF variance
   FP11(k+1)=FP11(k)+(((2*FP11(k)*((-fc/mc)-((h*Ac)/(mc*Cpc))))+(2*FP12(k)*((h*Ac)/(mc*Cpc)))+(((alpha1^2)*(Tcin^2/mc^2))+((fc/mc)^2*alpha2^2))-(FP11(k)*FP11(k)*(r^-2))-(FP12(k)*FP12(k)*(r^-2)))*dt);
   FP12(k+1)=FP12(k)+(((FP11(k)*((h*Ah)/(mh*Cph)))+(FP12(k)*((-fh/mh)-((h*Ah)/(mh*Cph))))+(FP12(k)*((-fc/mc)-((h*Ac)/(mc*Cpc))))+(FP22(k)*((h*Ac)/(mc*Cpc)))-(FP11(k)*FP12(k)*(r^-2))-(FP12(k)*FP22(k)*(r^-2)))*dt);
   FP21(k+1)=FP12(k+1);
   FP22(k+1)=FP22(k)+(((2*FP12(k)*((h*Ah)/(mh*Cph)))+(2*FP22(k)*((-fh/mh)-((h*Ah)/(mh*Cph))))+(((alpha3^2)*(Thin^2/mc^2))+((fh/mh)^2*alpha4^2))-(FP12(k)*FP12(k)*(r^-2))-(FP22(k)*FP22(k)*(r^-2)))*dt);
   
   %% Filtering second-order mean   
   Smx1(k+1)=Smx1(k)+((((fc/mc)*Tcin-(fc/mc)*Smx1(k))+(((h*Ac)/(mc*Cpc))*(Smx2(k)-Smx1(k))))*dt)+((SP11(k)*(r^-2)*(((x1(k)*dt)+(r*dV1))-(Smx1(k)*dt))))+((SP12(k)*(r^-2)*(((x2(k)*dt)+(r*dV2))-(Smx2(k)*dt))));
   Smx2(k+1)=Smx2(k)+((((fh/mh)*Thin-(fh/mh)*Smx2(k))-(((h*Ah)/(mh*Cph))*(Smx2(k)-Smx1(k))))*dt)+((SP12(k)*(r^-2)*(((x1(k)*dt)+(r*dV1))-(Smx1(k)*dt))))+((SP22(k)*(r^-2)*(((x2(k)*dt)+(r*dV2))-(Smx2(k)*dt))));

   %% Second-order variance
   SP11(k+1)=SP11(k)+(((2*SP11(k)*((-fc/mc)-((h*Ac)/(mc*Cpc))))+(2*SP12(k)*((h*Ac)/(mc*Cpc)))+((alpha1^2/mc^2)*((Tcin-Smx1(k))^2))+((fc/mc)^2*(alpha2^2))-(SP11(k)*(alpha1^2/mc^2))-(SP11(k)*SP11(k)*(r^-2))-(SP12(k)*SP12(k)*(r^-2)))*dt);
   SP12(k+1)=SP12(k)+(((SP11(k)*((h*Ah)/(mh*Cph)))+(SP12(k)*((-fh/mh)-((h*Ah)/(mh*Cph))))+(SP12(k)*((-fc/mc)-((h*Ac)/(mc*Cpc))))+(SP22(k)*((h*Ac)/(mc*Cpc)))-(SP11(k)*SP12(k)*(r^-2))-(SP12(k)*SP22(k)*(r^-2)))*dt);
   SP21(k+1)=SP12(k+1);
   SP22(k+1)=SP22(k)+(((2*SP12(k)*((h*Ah)/(mh*Cph)))+(2*SP22(k)*((-fh/mh)-((h*Ah)/(mh*Cph))))+((alpha3^2/mh^2)*((Thin-Smx2(k))^2))+((fh/mh)^2*(alpha4^2))-(SP22(k)*(alpha3^2/mh^2))-(SP12(k)*SP12(k)*(r^-2))-(SP22(k)*SP22(k)*(r^-2)))*dt);
     
end

%% Change in Input Variable one at a time and see the effect on the two Outputs

%fc=0.00555; 
%fc=0.00555;
%fh=0.0152778;
%Tcin=288;
%Thin=363;

N1=2000;
T1=200;
dt=T1/N1;
%% --------------- Second-loop of another 1000 samples-----------
for k= N:N1
    
   dW1=randn*sqrt(dt);
   dW2=randn*sqrt(dt);
   dW3=randn*sqrt(dt);
   dW4=randn*sqrt(dt);
   dV1=randn*sqrt(dt);
   dV2=randn*sqrt(dt);
   
   %% Stochastic Differential Equations -- Heat Exchanger
   x1(k+1)=x1(k)+((((fc/mc)*(Tcin-x1(k)))+(((h*Ac)/(mc*Cpc))*(x2(k)-x1(k))))*dt)+((alpha1*((Tcin-x1(k))/mc))*dW1)+(alpha2*(fc/mc)*dW2);
   x2(k+1)=x2(k)+((((fh/mh)*(Thin-x2(k)))-(((h*Ah)/(mh*Cph))*(x2(k)-x1(k))))*dt)+((alpha3*((Thin-x2(k))/mh))*dW3)+(alpha4*(fh/mh)*dW4);
         
   %% EKF mean
   Fmx1(k+1)=Fmx1(k)+((((fc/mc)*Tcin-(fc/mc)*Fmx1(k))+(((h*Ac)/(mc*Cpc))*(Fmx2(k)-Fmx1(k))))*dt)+((FP11(k)*(r^-2)*(((x1(k)*dt)+(r*dV1))-(Fmx1(k)*dt))))+((FP12(k)*(r^-2)*(((x2(k)*dt)+(r*dV2))-(Fmx2(k)*dt))));
   Fmx2(k+1)=Fmx2(k)+((((fh/mh)*Thin-(fh/mh)*Fmx2(k))-(((h*Ah)/(mh*Cph))*(Fmx2(k)-Fmx1(k))))*dt)+((FP12(k)*(r^-2)*(((x1(k)*dt)+(r*dV1))-(Fmx1(k)*dt))))+((FP22(k)*(r^-2)*(((x2(k)*dt)+(r*dV2))-(Fmx2(k)*dt))));

   %% EKF variance
   FP11(k+1)=FP11(k)+(((2*FP11(k)*((-fc/mc)-((h*Ac)/(mc*Cpc))))+(2*FP12(k)*((h*Ac)/(mc*Cpc)))+(((alpha1^2)*(Tcin^2/mc^2))+((fc/mc)^2*alpha2^2))-(FP11(k)*FP11(k)*(r^-2))-(FP12(k)*FP12(k)*(r^-2)))*dt);
   FP12(k+1)=FP12(k)+(((FP11(k)*((h*Ah)/(mh*Cph)))+(FP12(k)*((-fh/mh)-((h*Ah)/(mh*Cph))))+(FP12(k)*((-fc/mc)-((h*Ac)/(mc*Cpc))))+(FP22(k)*((h*Ac)/(mc*Cpc)))-(FP11(k)*FP12(k)*(r^-2))-(FP12(k)*FP22(k)*(r^-2)))*dt);
   FP21(k+1)=FP12(k+1);
   FP22(k+1)=FP22(k)+(((2*FP12(k)*((h*Ah)/(mh*Cph)))+(2*FP22(k)*((-fh/mh)-((h*Ah)/(mh*Cph))))+(((alpha3^2)*(Thin^2/mc^2))+((fh/mh)^2*alpha4^2))-(FP12(k)*FP12(k)*(r^-2))-(FP22(k)*FP22(k)*(r^-2)))*dt);
   
   %% Filtering second-order mean   
   Smx1(k+1)=Smx1(k)+((((fc/mc)*Tcin-(fc/mc)*Smx1(k))+(((h*Ac)/(mc*Cpc))*(Smx2(k)-Smx1(k))))*dt)+((SP11(k)*(r^-2)*(((x1(k)*dt)+(r*dV1))-(Smx1(k)*dt))))+((SP12(k)*(r^-2)*(((x2(k)*dt)+(r*dV2))-(Smx2(k)*dt))));
   Smx2(k+1)=Smx2(k)+((((fh/mh)*Thin-(fh/mh)*Smx2(k))-(((h*Ah)/(mh*Cph))*(Smx2(k)-Smx1(k))))*dt)+((SP12(k)*(r^-2)*(((x1(k)*dt)+(r*dV1))-(Smx1(k)*dt))))+((SP22(k)*(r^-2)*(((x2(k)*dt)+(r*dV2))-(Smx2(k)*dt))));

   %% Second-order variance
   SP11(k+1)=SP11(k)+(((2*SP11(k)*((-fc/mc)-((h*Ac)/(mc*Cpc))))+(2*SP12(k)*((h*Ac)/(mc*Cpc)))+((alpha1^2/mc^2)*((Tcin-Smx1(k))^2))+((fc/mc)^2*(alpha2^2))-(SP11(k)*(alpha1^2/mc^2))-(SP11(k)*SP11(k)*(r^-2))-(SP12(k)*SP12(k)*(r^-2)))*dt);
   SP12(k+1)=SP12(k)+(((SP11(k)*((h*Ah)/(mh*Cph)))+(SP12(k)*((-fh/mh)-((h*Ah)/(mh*Cph))))+(SP12(k)*((-fc/mc)-((h*Ac)/(mc*Cpc))))+(SP22(k)*((h*Ac)/(mc*Cpc)))-(SP11(k)*SP12(k)*(r^-2))-(SP12(k)*SP22(k)*(r^-2)))*dt);
   SP21(k+1)=SP12(k+1);
   SP22(k+1)=SP22(k)+(((2*SP12(k)*((h*Ah)/(mh*Cph)))+(2*SP22(k)*((-fh/mh)-((h*Ah)/(mh*Cph))))+((alpha3^2/mh^2)*((Thin-Smx2(k))^2))+((fh/mh)^2*(alpha4^2))-(SP22(k)*(alpha3^2/mh^2))-(SP12(k)*SP12(k)*(r^-2))-(SP22(k)*SP22(k)*(r^-2)))*dt);
     
end

t=0:dt:T1;


%% Plots for mean 

   figure;
   plot(t,x1,'b',t,Smx1,'black--',t,Fmx1,'r','LineWidth',2);
   xlabel('Time(s)','FontWeight','bold','Fontsize',24)
   ylabel('Cold-stream temperature (K)','FontWeight','bold','Fontsize',24)
   legend({'True state trajecotry', 'Second-order filter', 'EKF'},'Fontsize',24);
   set(gca,'FontWeight','bold','Fontsize',24);
   
   figure;
   plot(t,x2,'b',t,Smx2,'black--',t,Fmx2,'r','LineWidth',2);
   legend({'True state trajecotry', 'Second-order filter', 'EKF'},'Fontsize',24);
   xlabel('Time(s)','FontWeight','bold','Fontsize',24)
   ylabel('Hot-stream temperature (K)','FontWeight','bold','Fontsize',24)
   set(gca,'FontWeight','bold','Fontsize',24);
   
%% Absolute Estimation Error

    EF1=x1-Fmx1;
    EAF1=abs(EF1);
    EF2=x2-Fmx2;
    EAF2=abs(EF2);

    ES1=x1-Smx1;
    EAS1=abs(ES1);
    ES2=x2-Smx2;
    EAS2=abs(ES2);

    figure;
    subplot(2,2,1)
    plot(t,EAS1,'black',t,EAF1,'red');
    ylabel('APE (Cold-stream)','FontWeight','bold','Fontsize',24);
    set(gca,'FontWeight','bold','Fontsize',24);

    subplot(2,2,3)
    plot(t,EAS2,'black',t,EAF2,'red');
    ylabel('APE (Hot-stream)','FontWeight','bold','Fontsize',24);
    xlabel('Time(s)','FontWeight','bold','Fontsize',24)
    set(gca,'FontWeight','bold','Fontsize',24);

%% Plots for variance
    subplot(2,2,2)
    plot(t,SP11,'black',t,FP11,'r','LineWidth',2);
    ylabel('Conditional vairance(Cold-stream)','FontWeight','bold','Fontsize',24);
    legend('Second-order filter', 'EKF');
    set(gca,'FontWeight','bold','Fontsize',24);

    subplot(2,2,4)
    plot(t,SP22,'black',t,FP22,'r','LineWidth',2);
    ylabel('Conditional vairance(Hot-stream)','FontWeight','bold','Fontsize',24);
    xlabel('Time(s)','FontWeight','bold','Fontsize',24)
    set(gca,'FontWeight','bold','Fontsize',24);
